---
import { desc, eq, getTableColumns } from "drizzle-orm";
import db from "../database/db";
import { Member, Motion } from "../database/schema";
import Layout from "../layouts/Layout.astro";
import { thingColourHandler } from "../server/thingUtils";

export const prerender = false;

const motions = await db
    .select({
        ...getTableColumns(Motion),
        memberColor: Member.color,
    })
    .from(Motion)
    .where(eq(Motion.deleted, false))
    .innerJoin(Member, eq(Motion.memberDiscord, Member.discord))
    .orderBy(desc(Motion.id))
    .then(thingColourHandler);
---

<Layout
    header="Motions"
    title="Motions"
    description="Motions created by the LaTeX 4000 Collective"
>
    Some of us are REALLY bored. Here are {motions.length} motions that we have released
    under the collective's name instead of our own:
    <div class="motions">
        {
            motions.map((motion) => (
                <div class="motion">
                    <iframe
                        src={motion.youtubeUrl.replace(/watch\?v=/, "embed/")}
                        style={{
                            width: "var(--media-video-width, 16lh)",
                            height: "var(--media-video-height, 9lh)",
                            border: motion.memberColor
                                ? `var(--border-thickness) solid ${motion.memberColor}`
                                : "none",
                        }}
                        title="YouTube video player"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                        referrerpolicy="strict-origin-when-cross-origin"
                        allowfullscreen
                    />
                    <div class="details">
                        <h2>{motion.title}</h2>
                        {/* prettier-ignore */}
                        <div>
                            <a href={motion.youtubeUrl}>{/* prettier-ignore */}<span class="y">You</span><span class="t">Tube</span></a>
                            |
                            <span>{motion.date.toLocaleString()}</span>
                        </div>
                        <div class="tags">
                            {motion.tags.map((tag) => (
                                <span>{tag}</span>
                            ))}
                        </div>
                    </div>
                </div>
            ))
        }
    </div>
</Layout>

<style>
    /* This is straightup copypasted and barely edited from sounds.astro... probably should just make a component that works for both */
    .motions {
        margin: var(--space-sm) 0;
        display: flex;
        flex-direction: column;
        gap: var(--space-sm);
    }

    .motion {
        display: flex;
        gap: var(--space-inline-md);
        flex: 0 0 var(--media-cover-size-lg, 11lh);
        flex: 0 0 round(var(--media-cover-size-lg, 11lh), 1ch);
        line-height: 1;
    }

    .details {
        display: flex;
        flex-direction: column;
        gap: var(--space-sm);
        flex-grow: 1;
        min-width: 0;
    }

    h2 {
        height: var(--space-lg);
        margin: 0;
        text-transform: none;
    }

    .tags {
        display: flex;
        gap: var(--space-inline-md);
        overflow-x: auto;
    }

    .tags > span {
        border: var(--border-thickness) solid var(--text-color);
        padding: calc(var(--space-xs) - var(--border-thickness))
            calc(var(--space-inline-md) - var(--border-thickness));
        text-wrap: nowrap;
    }

    .y {
        color: var(--text-color-alt);
    }

    .t {
        color: rgb(255, 0, 0);
    }
</style>
