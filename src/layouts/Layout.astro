---
import ThemeInit from "../styles/ThemeInit.astro";
import { defaultTheme } from "../styles/config";
import ThemeSelector from "../styles/ThemeSelector.svelte";
import baseStylesUrl from "../styles/base.css?url";
import resetStylesUrl from "../styles/reset.css?url";

const { header, title, description, colour } = Astro.props;
const keywords =
    "LaTeX 4000, LaTeX, latex, 4000, collective, webring, art, music, organization, design, web";
const schema = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Organization",
    name: title || "LaTeX 4000",
    description: description || "LaTeX 4000 Collective",
    url: Astro.url.toString(),
    keywords,
    logo: new URL("/logo.png", Astro.url).toString(),
});

/* eslint-disable astro/jsx-a11y/anchor-is-valid */
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <link rel="canonical" href={Astro.url} />
        <link
            rel="alternate"
            type="application/rss+xml"
            title="LaTeX 4000's Words"
            href={new URL("/rss.xml", Astro.url)}
        />
        <title>{title || "LaTeX 4000"}</title>
        <meta
            name="description"
            content={description || "LaTeX 4000 Collective"}
        />
        <meta name="author" content="LaTeX 4000" />
        <meta name="keywords" content={keywords} />
        <meta
            name="theme-color"
            content={colour ?? defaultTheme.values["--background-color"]}
        />

        <meta name="twitter:card" content="summary" />
        <meta name="twitter:site" content="@Latex4000" />
        <meta name="twitter:title" content={title || "LaTeX 4000"} />
        <meta
            name="twitter:description"
            content={description || "LaTeX 4000 Collective"}
        />
        <meta name="twitter:image" content={new URL("/logo.png", Astro.url)} />

        <meta property="og:title" content={title || "LaTeX 4000"} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content={Astro.url} />
        <meta property="og:image" content={new URL("/logo.png", Astro.url)} />
        <meta
            property="og:description"
            content={description || "LaTeX 4000 Collective"}
        />
        <meta property="og:site_name" content="LaTeX 4000" />
        <meta property="og:locale" content="en_US" />

        <script is:inline type="application/ld+json" set:html={schema} />

        <ThemeInit />
        <link data-reset-styles href={resetStylesUrl} rel="stylesheet" />
        <link data-base-styles href={baseStylesUrl} rel="stylesheet" />
    </head>
    <body data-theme={defaultTheme.slug}>
        <header>
            <div class="title-bar">
                <h1>
                    <a href="/" class="latex"
                        >L<span>a</span>T<span>e</span>X 4000 / L4K</a
                    >
                </h1>
                <ThemeSelector client:load />
            </div>
            <nav>
                <div class="ch">
                    <span style="white-space: pre;"
                        ><a href="/random">!ch</a>
                    </span>
                    <div class="ch__hover">
                        <span style="white-space: pre;"
                            ><a href="#" class="js-roll">!roll</a>
                        </span><br />
                        <span style="white-space: pre;"
                            ><a href="#" class="js-shouldi">!shouldi</a>
                        </span>
                    </div>
                </div>
                <div class="command-results js-command-results"></div>
                <a href="/">Home</a>
                |
                <a href="/sounds">Sounds</a>
                |
                <a href="/words">Words</a>
                |
                <a href="/motions">Motions</a>
                |
                <a href="/sights">Sights</a>
                |
                <a href="/actions">Actions</a>
                |
                <a href="/things">Things</a>
            </nav>
            <h2>{header}</h2>
        </header>
        <main>
            <slot />
        </main>
        <footer>
            <div class="webring">
                <div>Web ring</div>
                <div>
                    <a
                        class="webring__prev"
                        href="/ring?action=prev&from=LaTeX 4000"
                        title="Previous"></a>
                    <a href="/ring?action=rand&from=LaTeX 4000">Random</a>
                    <a
                        class="webring__next"
                        href="/ring?action=next&from=LaTeX 4000"
                        title="Next"></a>
                </div>
            </div>
            <div class="footer-info">
                <div>
                    <div class="latex">
                        L<span>a</span>T<span>e</span>X 4000 Collective
                    </div>
                    <div>
                        <a href="https://www.youtube.com/@latex4000">YouTube</a>
                        |
                        <a href="https://soundcloud.com/latex4000">SoundCloud</a
                        >
                        |
                        <a href="https://github.com/Latex4000">GitHub</a>
                    </div>
                </div>
                <div>
                    <a href={defaultTheme.values["--srclink"]} id="style-source"
                        >{defaultTheme.values["--srctext"]}</a
                    >
                </div>
            </div>
        </footer>
    </body>
</html>

<style>
    .title-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .ch {
        position: absolute;
        right: 100%;
        text-transform: none;
        text-align: right;
    }

    .ch__hover {
        display: none;
    }

    .ch:hover > .ch__hover {
        display: block;
    }

    .command-results {
        position: absolute;
        right: 100%;
        text-transform: none;
    }

    /* Global scope here is necessary due to the elements being created in JS */
    :global(.command-results > span) {
        position: absolute;
        color: var(--text-color-alt);
        animation:
            2s command-fade-out forwards ease-in,
            1.5s command-fly-left forwards ease-out;
        text-shadow: var(--background-color) 0 0 2px;
    }

    @keyframes command-fade-out {
        from {
            opacity: 1;
        }
        to {
            opacity: 0;
        }
    }

    @keyframes command-fly-left {
        from {
            transform: none;
        }
        to {
            transform: translateY(-10px);
        }
    }

    .webring {
        margin-bottom: var(--space-sm);
        text-align: center;
    }

    .webring__prev::after {
        content: var(--webring-prev-icon, "<--");
    }

    .webring__next::after {
        content: var(--webring-next-icon, "-->");
    }

    .footer-row {
        display: flex;
        justify-content: space-between;
    }

    .footer-info {
        display: flex;
        justify-content: space-between;
    }

    @media only screen and (max-width: 767px) {
        .footer-info {
            flex-direction: column;
            gap: var(--space-sm);
            text-align: center;
        }
    }

    @media only screen and (max-width: 600px) {
        .header-nav {
            justify-content: center;
            align-items: center;
        }
    }
</style>

<script>
    const commandResultsElement = document.querySelector<HTMLElement>(
        ".js-command-results"
    )!;

    function showResult(positionElement: HTMLElement, result: string): void {
        const element = document.createElement("span");
        element.style.top = `${positionElement.offsetTop}px`;
        element.style.right = `${positionElement.offsetWidth + 10}px`;
        element.innerText = result;

        commandResultsElement.appendChild(element);

        // After the CSS animation is complete
        setTimeout(() => element.remove(), 2000);
    }

    const rollElement = document.querySelector<HTMLElement>(".js-roll")!;
    const shouldiElement = document.querySelector<HTMLElement>(".js-shouldi")!;

    rollElement.addEventListener("click", (event) => {
        event.preventDefault();

        const result = Math.floor(Math.random() * 100) + 1;

        showResult(rollElement.parentElement!, result.toString());
    });

    shouldiElement.addEventListener("click", (event) => {
        event.preventDefault();

        const results = ["yes", "no", "idk"];
        const result = results[Math.floor(Math.random() * 3)]!;

        showResult(shouldiElement.parentElement!, result);
    });
</script>
